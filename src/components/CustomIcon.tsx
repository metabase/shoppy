import { SVGProps } from "react"

const icons = {
  filter:
    "M1 4.5c0-.69.56-1.25 1.25-1.25h11.5a1.25 1.25 0 1 1 0 2.5H2.25C1.56 5.75 1 5.19 1 4.5zM4 9a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H5a1 1 0 0 1-1-1zm2 4.25a1 1 0 0 1 1-1h2a1 1 0 1 1 0 2H7a1 1 0 0 1-1-1z",
  sum: "M2.295 2.745A.75.75 0 0 1 3 2.25h9a.75.75 0 1 1 0 1.5H5.072l3.486 2.906c.84.7.84 1.989 0 2.688L5.072 12.25h6.763a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.48-1.326l5.078-4.232a.25.25 0 0 0 0-.384L2.52 3.576a.75.75 0 0 1-.225-.831z",
  notebook:
    "M3.5 3a.5.5 0 0 1 .5.5V5a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5V3.5A.5.5 0 0 1 2 3h1.5zM11.5 3.5A.5.5 0 0 0 11 3H6a.5.5 0 0 0-.5.5V5a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5V3.5zM14.5 7.25a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0-.5.5v1.5a.5.5 0 0 0 .5.5h8a.5.5 0 0 0 .5-.5v-1.5zM4 7.25a.5.5 0 0 0-.5-.5H2a.5.5 0 0 0-.5.5v1.5a.5.5 0 0 0 .5.5h1.5a.5.5 0 0 0 .5-.5v-1.5zM3.5 10.5a.5.5 0 0 1 .5.5v1.5a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5V11a.5.5 0 0 1 .5-.5h1.5zM10 11a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0-.5.5v1.5a.5.5 0 0 0 .5.5h3.5a.5.5 0 0 0 .5-.5V11z",
  book: "M8.51682 16.3206L8.51679 16.3206C8.07139 15.8752 7.46728 15.625 6.83739 15.625H2.08008C1.73491 15.625 1.45508 15.3452 1.45508 15V1.5C1.45508 1.15483 1.73491 0.875 2.08008 0.875H6.83739C7.79883 0.875 8.7209 1.25694 9.40072 1.93681L10.7264 3.26255L11.0799 3.61612L11.4335 3.26257L12.7595 1.93666C13.4393 1.25689 14.3613 0.875 15.3227 0.875H20.0801C20.4252 0.875 20.7051 1.15483 20.7051 1.5V15C20.7051 15.3452 20.4252 15.625 20.0801 15.625H15.3227C14.6928 15.625 14.0888 15.8752 13.6434 16.3206L13.6434 16.3206L11.5218 18.4419L11.5218 18.4419C11.4046 18.5592 11.2457 18.625 11.0799 18.625C10.9141 18.625 10.7552 18.5592 10.638 18.442L10.638 18.4419L8.51682 16.3206ZM2.70508 13.875V14.375H3.20508H6.83739C7.79878 14.375 8.72084 14.757 9.40068 15.4368C9.4007 15.4368 9.40072 15.4368 9.40074 15.4368L9.60147 15.6376L10.4551 16.4915V15.2841V4.96614V4.75904L10.3086 4.6126L8.51682 2.82067L8.51681 2.82066C8.07142 2.37525 7.4673 2.125 6.83739 2.125H3.20508H2.70508V2.625V13.875ZM11.7051 15.2839V16.491L12.5586 15.6375L12.7595 15.4367L12.7595 15.4367C13.4393 14.7569 14.3613 14.375 15.3227 14.375H18.9551H19.4551V13.875V2.625V2.125H18.9551H15.3227C14.6928 2.125 14.0888 2.37523 13.6434 2.82054L13.6433 2.82057L11.8515 4.61228L11.7051 4.75873V4.96584V15.2839Z",
  insight:
    "M8 0.40625C8.46599 0.40625 8.84375 0.784014 8.84375 1.25V5.91355C8.85545 5.91829 8.86711 5.92313 8.87872 5.92805L11.3409 3.46589C11.6704 3.13639 12.2046 3.13639 12.5341 3.46589C12.8636 3.79539 12.8636 4.32963 12.5341 4.65913L10.072 7.1213C10.0769 7.13289 10.0817 7.14455 10.0864 7.15625H14.75C15.216 7.15625 15.5938 7.53401 15.5938 8C15.5938 8.46599 15.216 8.84375 14.75 8.84375H10.0864C10.0817 8.85543 10.0769 8.86705 10.072 8.87861L12.5342 11.3409C12.8637 11.6704 12.8637 12.2046 12.5342 12.5341C12.2048 12.8636 11.6705 12.8636 11.341 12.5341L8.87879 10.0719C8.86716 10.0769 8.85548 10.0817 8.84375 10.0864V14.75C8.84375 15.216 8.46599 15.5938 8 15.5938C7.53401 15.5938 7.15625 15.216 7.15625 14.75V10.0864C7.14455 10.0817 7.13289 10.0769 7.1213 10.072L4.65912 12.5341C4.32962 12.8636 3.79538 12.8636 3.46588 12.5341C3.13638 12.2046 3.13638 11.6704 3.46588 11.3409L5.92805 8.87872C5.92313 8.86711 5.91829 8.85545 5.91355 8.84375H1.25C0.784014 8.84375 0.40625 8.46599 0.40625 8C0.40625 7.53401 0.784014 7.15625 1.25 7.15625H5.91355C5.9183 7.14452 5.92315 7.13284 5.92809 7.12121L3.466 4.65912C3.1365 4.32962 3.1365 3.79538 3.466 3.46588C3.79552 3.13638 4.32974 3.13638 4.65925 3.46588L7.12139 5.92801C7.13295 5.92309 7.14457 5.91828 7.15625 5.91355V1.25C7.15625 0.784014 7.53401 0.40625 8 0.40625Z",
  bar: (
    <>
      <path d="M18.0887 7.25705C18.0887 7.25724 18.0902 7.25666 18.0931 7.25472C18.0901 7.25588 18.0886 7.25685 18.0887 7.25705ZM18.0993 7.25C18.1077 7.24301 18.1207 7.2299 18.1377 7.20664C18.1929 7.13096 18.25 6.98962 18.25 6.8L18.25 5.2C18.25 5.01038 18.1929 4.86904 18.1377 4.79336C18.1207 4.7701 18.1077 4.75699 18.0993 4.75L5.75 4.75L5.75 7.25L18.0993 7.25ZM18.0887 4.74295C18.0886 4.74315 18.0901 4.74412 18.0931 4.74528C18.0902 4.74334 18.0887 4.74276 18.0887 4.74295Z" />
      <path d="M12.1027 13.2359C12.0024 13.2486 11.8577 13.25 11.5714 13.25L5.75 13.25L5.75 10.75L11.5714 10.75C11.8577 10.75 12.0024 10.7514 12.1027 10.7641C12.1105 10.7651 12.1171 10.7661 12.1227 10.767C12.142 10.7896 12.1677 10.8275 12.1918 10.8859L12.1027 13.2359ZM12.1027 13.2359C12.1105 13.2349 12.1171 13.2339 12.1227 13.233M12.1027 13.2359L12.1227 13.233M12.1227 13.233C12.142 13.2104 12.1677 13.1725 12.1918 13.1141L12.1227 13.233ZM12.2372 12.8275C12.225 13.0155 12.2039 13.0848 12.1918 13.114L12.2372 12.8275ZM12.2372 12.8275C12.2496 12.6357 12.25 12.3837 12.25 12M12.2372 12.8275L12.25 12M12.25 12C12.25 11.6163 12.2496 11.3643 12.2372 11.1725M12.25 12L12.2372 11.1725M12.2372 11.1725C12.225 10.9845 12.2039 10.9152 12.1918 10.886L12.2372 11.1725Z" />
      <path d="M9.05782 19.2505C9.05784 19.2506 9.05884 19.2506 9.06075 19.25C9.05875 19.2501 9.05779 19.2504 9.05782 19.2505ZM9.0609 19.25C9.06959 19.2476 9.09618 19.2357 9.13439 19.1868C9.19307 19.1117 9.25 18.9774 9.25 18.8L9.25 17.2C9.25 17.0226 9.19307 16.8883 9.13439 16.8132C9.09618 16.7643 9.0696 16.7524 9.0609 16.75L5.75 16.75L5.75 19.25L9.0609 19.25ZM9.05782 16.7495C9.05779 16.7496 9.05875 16.7499 9.06075 16.75C9.05884 16.7494 9.05784 16.7494 9.05782 16.7495Z" />
    </>
  ),
  dashboard: (
    <>
      <path d="M8.34375 13.125C7.87776 13.125 7.5 13.5028 7.5 13.9688C7.5 14.4347 7.87776 14.8125 8.34375 14.8125H15.6562C16.1222 14.8125 16.5 14.4347 16.5 13.9688C16.5 13.5028 16.1222 13.125 15.6562 13.125H8.34375Z" />
      <path d="M7.5 10.0312C7.5 9.40993 8.00368 8.90625 8.625 8.90625C9.24632 8.90625 9.75 9.40993 9.75 10.0312C9.75 10.6526 9.24632 11.1562 8.625 11.1562C8.00368 11.1562 7.5 10.6526 7.5 10.0312Z" />
      <path d="M11.7188 9.1875C11.2528 9.1875 10.875 9.56526 10.875 10.0312C10.875 10.4972 11.2528 10.875 11.7188 10.875H15.6562C16.1222 10.875 16.5 10.4972 16.5 10.0312C16.5 9.56526 16.1222 9.1875 15.6562 9.1875H11.7188Z" />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M4.40625 6.375C4.40625 5.28769 5.28769 4.40625 6.375 4.40625H17.625C18.7123 4.40625 19.5938 5.28769 19.5938 6.375V17.625C19.5938 18.7123 18.7123 19.5938 17.625 19.5938H6.375C5.28769 19.5938 4.40625 18.7123 4.40625 17.625V6.375ZM6.09375 17.625V6.9375H17.9062V17.625C17.9062 17.7804 17.7804 17.9062 17.625 17.9062H6.375C6.21967 17.9062 6.09375 17.7804 6.09375 17.625Z"
      />
    </>
  ),
} as const satisfies Record<string, string | React.ReactNode>

const viewboxes: Partial<Record<keyof typeof icons, string>> = {
  book: "0 0 22 20",
  dashboard: "0 0 24 24",
  bar: "0 0 24 24",
}

type CustomIconProps = SVGProps<SVGSVGElement> & {
  icon: keyof typeof icons
  size?: number
}

export const CustomIcon = ({
  icon,
  size = 16,
  fill,
  ...props
}: CustomIconProps) => {
  const iconDefinition = icons[icon]

  return (
    <svg
      viewBox={viewboxes[icon] ?? "0 0 16 16"}
      fill={fill ?? "var(--icon-primary)"}
      width={size}
      height={size}
      {...props}
    >
      {typeof iconDefinition === "string" ? (
        <path d={iconDefinition} />
      ) : (
        iconDefinition
      )}
    </svg>
  )
}
